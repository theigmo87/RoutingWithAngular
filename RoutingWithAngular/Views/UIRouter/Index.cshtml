@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>
    UI-Router
</h1>
<div style="margin-top:36px;">
    <ul class="nav nav-tabs">
        <li>
            <a ui-sref="home">Home State</a>
        </li>
        <li>
            <a ui-sref="state1">State 1</a>
        </li>
        <li>
            <a ui-sref="state2({ id: ''})">State 2 no params</a>
        </li>
        <li>
            <a ui-sref="state2({ id:3 })">State 2 id=3</a>
        </li>
        <li>
            <a ui-sref="state2" id="state2userinput">State 2 user input</a>
        </li>
        <li>
            <a ui-sref="employee">Employee</a>
        </li>
    </ul>
</div>
<div ui-view></div>
<hr />


@section Scripts{
    @Scripts.Render("~/bundles/angular-ui-router")
    <script>
        var myApp = angular.module('myApp', ['ui.router']);
    </script>
    <script>
        myApp.config(function ($stateProvider, $urlRouterProvider) {
            //
            // For any unmatched url, redirect to /home
            $urlRouterProvider.otherwise("/");
            //
            // Now set up the states
            $stateProvider
                .state('home', {
                    url: "/",
                    templateUrl: "@Url.Action("_Home")"
                })
                .state('state1', {
                    url: "/state1/",
                    templateUrl: "@Url.Action("_State1")"
                })
                .state('state2', {
                    url: "/state2/{id}",
                    templateUrl: function (params) {
                        var queryString = "";
                        var counter = 0;
                        for (var p in params) {
                            if (counter == 0)
                                queryString += "?" + p + "=" + params[p];
                            else
                                queryString += "&" + p + "=" + params[p];
                            counter++;
                        }
                        return "@Url.Action("_State2")" + queryString;
                    }
                })
                .state('employee', {
                    url: "/payroll/employees/",
                    templateUrl: "@Url.Action("Employees", "Payroll", null)"
                })
        });
    </script>
    <script>
        $("#state2userinput").on("click", function () {
            var userinput = prompt("enter in something");
            if (userinput != null) {
                var stateProvider = angular.element(document.getElementsByTagName("html")).injector().get("$state");
                stateProvider.go('state2', { id: userinput });
            }
        });
        function AjaxOnSuccess(data) {
            data.onSuccessState
            var stateProvider = angular.element(document.getElementsByTagName("html")).injector().get("$state");
            stateProvider.go(data.onSuccessState);
        }
    </script>
}